<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="net.zhqu.website.bg.dao.PictureDao">
    <resultMap id="Base_Column_List" type="net.zhqu.website.bg.model.PictureModel">
        <id column="picture_id" property="id"></id>
        <result column="picture_image_path" property="imagePath"/>
        <result column="picture_old_name" property="oldName"/>
        <result column="picture_new_name" property="newName"/>
        <result column="picture_create_time" property="createTime"/>
        <result column="picture_last_modified_time" property="lastModifiedTime"/>
        <association property="pictureGrouping" javaType="net.zhqu.website.bg.model.PictureGroupingModel">
            <id     property="id"                       column="picture_grouping_id"/>
            <id     property="pictureOwnership"                       column="picture_grouping_picture_ownership"/>
        </association>
        <association property="creator" javaType="net.zhqu.framework.entity.User">
            <id     property="id"                       column="creator_id"/>
            <result property="name"                     column="creator_name"/>
        </association>
    </resultMap>

    <select id="findAllPage" resultMap="Base_Column_List" parameterType="Param">
        SELECT
            a.id                       picture_id,
            a.image_path               picture_image_path,
            a.old_name                 picture_old_name,
            a.new_name                 picture_new_name,
            a.create_time              picture_create_time,
            a.last_modified_time       picture_last_modified_time,
            b.id                       creator_id,
            b.name                     creator_name,
            c.id                       picture_grouping_id,
            c.picture_ownership        picture_grouping_picture_ownership
		FROM picture a
        LEFT JOIN user b ON a.creator_id = b.id
        LEFT JOIN picture_grouping c ON a.picture_grouping_id = c.id
        <where>
            <if test="pictureGroupingId != null">
                a.picture_grouping_id = #{pictureGroupingId, jdbcType=BIGINT}
            </if>
        </where>


        <if test="orderByCreateTimeDesc">
            order by a.create_time desc
        </if>
    </select>

    <select id="findOne" resultMap="Base_Column_List" parameterType="Param">
        SELECT
            a.id                       picture_id,
            a.image_path               picture_image_path,
            a.old_name                 picture_old_name,
            a.new_name                 picture_new_name,
            a.create_time              picture_create_time,
            a.last_modified_time       picture_last_modified_time,
            b.id                       creator_id,
            b.name                     creator_name,
            c.id                       picture_grouping_id,
            c.picture_ownership        picture_grouping_picture_ownership
        FROM picture a
        LEFT JOIN user b ON a.creator_id = b.id
        LEFT JOIN picture_grouping c ON a.picture_grouping_id = c.id
        WHERE a.id = #{id, jdbcType=BIGINT}
    </select>

    <select id="count" resultType="java.lang.Integer" parameterType="Param">
        SELECT count(1)
		FROM picture a
		WHERE a.picture_grouping_id = #{pictureGroupingId, jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="net.zhqu.website.bg.model.PictureModel">
        INSERT INTO picture(
               id,
               image_path,
               old_name,
               new_name,
               picture_grouping_id,
               creator_id,
			   create_time,
			   last_modified_time
        )VALUES (
              #{id},
              #{imagePath},
              #{oldName},
              #{newName},
              #{pictureGrouping.id},
              #{creator.id},
			  now(),
			  now()
        )
    </insert>

    <update id="update" parameterType="net.zhqu.website.bg.model.PictureModel">
        UPDATE picture a
        <set>
            a.last_modified_time = now(),
            <if test="pictureGrouping != null and null != pictureGroupingId.id">
                a.picture_grouping_id = #{pictureGrouping.id},
            </if>
            <if test="newName != null and newName != ''">
                a.new_name = #{newName}
            </if>
        </set>
        WHERE
        a.id = #{id}
    </update>

    <update id="updateNotEmpty" parameterType="Param">
        UPDATE picture a
        <set>
            a.last_modified_time = now(),
            <if test="pictureGroupingId != null and pictureGroupingId != ''">
                a.picture_grouping_id = #{pictureGroupingId, jdbcType=BIGINT},
            </if>
        </set>
        WHERE
         a.id IN
        <foreach item="item" index="index" collection="pictureIdList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <delete id="delete" parameterType="Param">
        DELETE FROM picture
        WHERE id = #{id, jdbcType=BIGINT}
    </delete>


    <delete id="deletePictureList" parameterType="Param">
        DELETE FROM picture
        WHERE id IN
        <foreach item="item" index="index" collection="pictureIdList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


</mapper>